#!/bin/sh
export DOCKER_PORT=81;

# installing Nginx
sudo apt update
sudo apt install nginx -y

# configure Nginx
sudo ufw allow 'Nginx Full'
sudo systemctl start nginx
sudo cat > /etc/nginx/sites-available/${domain_name} << EOF
server {
        listen 80;
        listen [::]:80;

        server_name ${domain_name};

        location / {
            proxy_pass http://127.0.0.1:$${DOCKER_PORT};
            proxy_redirect off;
            proxy_set_header X-Forwarded-Host \$host;
            proxy_set_header X-Forwarded-Proto \$scheme;
            proxy_set_header X-Forwarded-Port \$server_port;
        }
}
EOF

sudo ln -s /etc/nginx/sites-available/${domain_name} /etc/nginx/sites-enabled/
sudo systemctl restart nginx

# configure SSL
sudo snap install core; sudo snap refresh core
sudo apt remove certbot
sudo snap install --classic certbot 
sudo ln -s /snap/bin/certbot /usr/bin/certbot
sudo certbot --nginx -d ${domain_name} -m ${email} --agree-tos -n
sudo certbot renew --dry-run

# configure docker 
sudo install -m 0755 -d /etc/apt/keyrings
sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
sudo chmod a+r /etc/apt/keyrings/docker.gpg
sudo echo \
  "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
  "$(. /etc/os-release && echo "$${VERSION_CODENAME}")" stable" | \
  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt-get update
sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin -y

# run proget container
sudo docker run -d --name=proget --restart=unless-stopped \
  -v proget-packages:/var/proget/packages -p $${DOCKER_PORT}:80 \
  -e PROGET_SQL_CONNECTION_STRING='${connection_string}' \
  proget.inedo.com/productimages/inedo/proget:latest